[tmc2240 stepper_x]
cs_pin: PF10
diag1_pin: PB5
spi_software_mosi_pin: PC12
spi_software_miso_pin: PC11
spi_software_sclk_pin: PC10

# uart_pin: PA10
# uart_address: 3
# tx_pin: 
# sense_resistor: 0.110

interpolate:  True # Reduce Noise. For best positional accuracy consider using spreadCycle mode and disable interpolation
run_current: 1

stealthchop_threshold: 0
# The velocity (in mm/s) to set the "stealthChop" threshold to. 
# When set, "stealthChop" mode will be enabled if the stepper motor
# velocity is below this value. The default is 0, which disables "stealthChop" mode.

# diag_pin: ^PA15  # sensorless homing
# hold_current: 0.80  # Disable for sensorless Homing - The current for motor in idle: it's not recommended use it.
# If defined, TMC driver can reduce current to the stepper motor when it detects that the stepper is not moving.
# The switch from run_current to hold_current has a negative impact on precision.

# driver_SGTHRS: 100 # Sensorless homing, 0-255, high has more sensibility
# endstop_pin: tmc2209_stepper_x:virtual_endstop

#[temperature_sensor stepper_x]
#sensor_type: temperature_driver
#sensor_driver: tmc2240 stepper_x


[tmc2240 stepper_y]
cs_pin: PD4
spi_software_mosi_pin: PC12
spi_software_miso_pin: PC11
spi_software_sclk_pin: PC10
diag1_pin: PC1

# uart_pin: PA10
# uart_address: 2
# sense_resistor: 0.110

interpolate:  True
run_current: 1

stealthchop_threshold: 0 # Max 999999
# diag_pin: ^PA12  # sensorless homing
# driver_SGTHRS: 100 # Sensorless homing, 0-255, high has more sensibility


[tmc2209 stepper_z]
uart_pin: PC8
# uart_address: 1
diag_pin: PC0
interpolate: True
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0 
# don't use 0.1 = stealthchop enabled only when the bed is static
# avoid to switch spreadcycle to stealthchop and viceversa during printing



[tmc2209 stepper_z1]
uart_pin: PD8
# uart_address: 0
diag_pin: PF4
interpolate: True
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

