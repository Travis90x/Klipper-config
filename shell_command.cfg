[gcode_macro GENERATE_SHAPER_GRAPHS]
description: Genarates input shaper resonances graphs for analysis. Uses the AXIS parameter for if you only want to do one axis at a time, (eg. GENERATE_SHAPER_GRAPHS AXIS=X)
gcode:
    {% if params.AXIS is defined %}
        {% if params.AXIS|lower == 'x' %}
            MAYBE_HOME
            TEST_RESONANCES AXIS=X
            RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
            RESPOND MSG="Input shaper graph generated for the X axis. You'll find it in the input_shaper folder in the machine tab!"
        {% elif params.AXIS|lower == 'y' %}
            MAYBE_HOME
            TEST_RESONANCES AXIS=Y
            RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
            RESPOND MSG="Input shaper graph generated for the Y axis. You'll find it in the input_shaper folder in the machine tab!"
        {% else %}
            {action_raise_error("Unknown axis specified. Expected X or Y.")}
        {% endif %}
    {% else %}
        MAYBE_HOME
        TEST_RESONANCES AXIS=X
        TEST_RESONANCES AXIS=Y
        RUN_SHELL_COMMAND CMD=generate_shaper_graph_x
        RUN_SHELL_COMMAND CMD=generate_shaper_graph_y
        RESPOND MSG="Input shaper graphs generated for X and Y. You'll find them in the input_shaper folder in the machine tab!"
    {% endif %}

[gcode_macro MEASURE_COREXY_BELT_TENSION]
description: Generates resonance graph used to ensure belts are equally tensioned.
gcode:
    TEST_RESONANCES AXIS=1,1  OUTPUT=raw_data NAME=belt-tension-upper
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=belt-tension-lower
    RUN_SHELL_COMMAND CMD=generate_belt_tension_graph
    RESPOND MSG="Belt tension graphs generated. You'll find them in the input_shaper folder in the machine tab!"


[gcode_macro calc_input_shaping]
gcode:
    RUN_SHELL_COMMAND CMD=shaper_calibrate


[gcode_shell_command shaper_calibrate]
 #  command: ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png     # with the * got issues
command: sh /home/pi/printer_data/config/scripts/generate-shaper-graph.sh
timeout: 60.
verbose: True


[gcode_macro calc_input_shaping_X]
gcode:
    RUN_SHELL_COMMAND CMD=shaper_calibrate_x


[gcode_shell_command shaper_calibrate_x]
 #  command: ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png     # with the * got issues
command: sh /home/pi/printer_data/config/scripts/generate-shaper-graph-x.sh
timeout: 60.
verbose: True


[gcode_macro calc_input_shaping_Y]
gcode:
    RUN_SHELL_COMMAND CMD=shaper_calibrate_y

[gcode_shell_command shaper_calibrate_y]
command: sh /home/pi/printer_data/config/scripts/generate-shaper-graph-y.sh
timeout: 60.
verbose: True


[gcode_macro calc_belt]
gcode:
    RUN_SHELL_COMMAND CMD=shell_calc_belts

[gcode_shell_command shell_calc_belts]
command: sh /home/pi/printer_data/config/scripts/generate-belt-tension-graph.sh
timeout: 90.
verbose: True


#  ██╗   ██╗███████╗██████╗ 
#  ██║   ██║██╔════╝██╔══██╗
#  ██║   ██║███████╗██████╔╝
#  ██║   ██║╚════██║██╔══██╗
#  ╚██████╔╝███████║██████╔╝
#   ╚═════╝ ╚══════╝╚═════╝ 
#  

[gcode_macro USB_KEY]
gcode:
    RUN_SHELL_COMMAND CMD=USB_KEY

[gcode_shell_command USB_KEY]
command: sh /home/pi/printer_data/config/scripts/USB_KEY.sh
timeout: 10.
verbose: True


[gcode_macro USB_MOUNT]
gcode:
    RUN_SHELL_COMMAND CMD=USB_MOUNT

[gcode_shell_command USB_MOUNT]
command: sh /home/pi/printer_data/config/scripts/USB_MOUNT.sh
timeout: 10.
verbose: True

[gcode_macro USB_UNMOUNT]
gcode:
    RUN_SHELL_COMMAND CMD=USB_UNMOUNT

[gcode_shell_command USB_UNMOUNT]
command: sh /home/pi/printer_data/config/scripts/USB_UNMOUNT.sh
timeout: 10.
verbose: True

[gcode_macro USB_COPY_GCODES]
gcode:
    RUN_SHELL_COMMAND CMD=USB_COPY_GCODES

[gcode_shell_command USB_COPY_GCODES]
command: bash /home/pi/printer_data/config/scripts/USB_COPY.sh
timeout: 10.
verbose: True

[gcode_macro USB_KEY]
gcode:
    RUN_SHELL_COMMAND CMD=USB_KEY

[gcode_shell_command USB_KEY]
command: bash /home/pi/printer_data/config/scripts/USB_KEY.sh
timeout: 10.
verbose: True


[gcode_macro USB]
gcode:
    RUN_SHELL_COMMAND CMD=USB

[gcode_shell_command USB]
command: sh /home/pi/printer_data/config/scripts/USB_Check.sh
timeout: 10.
verbose: True

[gcode_shell_command Klipperscreen]  # edit the IP and restart Klipperscreen
command: echo 'DISPLAY=192.168.0.97:0 $KS_XCLIENT' > /home/pi/KlipperScreen/scripts/launch_KlipperScreen.sh
timeout: 10.
verbose: True

# [gcode_macro lista_file]
# gcode:
    # RUN_SHELL_COMMAND CMD=lista_file
# [gcode_shell_command lista_file]
# command: ls /home/pi/klipper/scripts/


